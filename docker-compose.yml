version: '3.8'

services:
  # Frontend (Nginx)
  frontend:
    image: nginx:alpine
    ports:
      - "3001:80"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    restart: unless-stopped

  # Backend (Node.js)
  backend:
    build: ./backend  # Build from backend/Dockerfile
    ports:
      - "3002:3000"  # Host port 3002 â†’ Container port 3000
    env_file:
      - ./backend/.env  # Load backend environment variables
    environment:
      - NODE_ENV=production
    depends_on:
      - postgres
    restart: unless-stopped

  # Postgres
  postgres:
    image: postgres:14-alpine
    env_file:
      - ./backend/.env  # Use backend's .env for Postgres config
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  postgres-data: